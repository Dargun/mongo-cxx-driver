<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Contribution Guidelines on MongoDB C&#43;&#43; Driver Manual</title>
    <link>http://mongocxx.org/contributing/</link>
    <description>Recent content in Contribution Guidelines on MongoDB C&#43;&#43; Driver Manual</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Aug 2016 16:11:58 +0530</lastBuildDate>
    
	<atom:link href="http://mongocxx.org/contributing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing the legacy driver</title>
      <link>http://mongocxx.org/contributing/testing-legacy/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>http://mongocxx.org/contributing/testing-legacy/</guid>
      <description>If you contribute to the C++ driver, you&amp;rsquo;ll need to test your changes. The driver comes with a number of tests to ensure its functionality and performance. There are a few different kinds of tests within the driver&amp;rsquo;s codebase.
Note: if you are running OS X Mavericks or above, you may need to include the --osx-version-min=10.9 flag to the commands below.
Note: The 26compat branch differs from the instructions below as follows:</description>
    </item>
    
    <item>
      <title>Testing the mongocxx driver</title>
      <link>http://mongocxx.org/contributing/testing-mongocxx/</link>
      <pubDate>Mon, 15 Aug 2016 16:11:58 +0530</pubDate>
      
      <guid>http://mongocxx.org/contributing/testing-mongocxx/</guid>
      <description>Tests for the C++11 driver use Catch, a testing framework for C++.
Each class in the driver has a corresponding file in src/mongocxx/test. Because the new driver wraps libmongoc, we prefer to mock and test the behavior of individual classes rather than test end-to-end behavior of operations against a running mongod. In other words, these are unit tests rather than integration tests.
We also have integration tests for this driver in test/collection.</description>
    </item>
    
  </channel>
</rss>